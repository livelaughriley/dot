# --------
# Makevars
# vim: filetype=make
# --------



### macOS SDK ###
# use this if you installed Xcode CLT without Xcode
SDK=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk

# use this if you have Xcode installed
#XCODE=/Applications/Xcode.app/Contents
#SDK=$(XCODE)/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk



### Homebrew bin / opt / lib / include locations ###
HB=/usr/local/bin
HO=/usr/local/opt
HL=/usr/local/lib
HI=/usr/local/include



### Compile config ###
# Make using all cores
MAKE=make -j`nproc`

# ccache
CCACHE=$(HB)/ccache

# LLVM (Clang) compiler options
CC=$(CCACHE) $(HO)/llvm/bin/clang
CXX=$(CC)++
CXX98=$(CC)++
CXX11=$(CC)++
CXX14=$(CC)++
CXX17=$(CC)++
SHLIB_CXXLD=$(CC)++

# standards
CXX1XSTD=-std=c++0x
CXX11STD=-std=c++11
CXX14STD=-std=c++14
CXX17STD=-std=c++17

# FORTRAN
# GNU version (assumes latest in Homebrew as of Sep 2020)
V=10
FC=$(CCACHE) $(HB)/gfortran-$(V)
F77=$(FC)
FLIBS=-L$(HL)/gcc/$(V) -lgfortran -lquadmath -lm


# FLAGS
STD_FLAGS=-g -O3 -Wall -pedantic -mtune=native -pipe
CFLAGS=$(STD_FLAGS) 
CXXFLAGS=$(STD_FLAGS)
CXX98FLAGS=$(STD_FLAGS)
CXX11FLAGS=$(STD_FLAGS)
CXX14FLAGS=$(STD_FLAGS)
CXX17FLAGS=$(STD_FLAGS)

FFLAGS=$(STD_FLAGS) 
FCFLAGS=$(STD_FLAGS)


# Preprocessor FLAGS
# NB: -isysroot refigures the include path to the Xcode SDK
CPPFLAGS=-isysroot $(SDK) \
	 -I$(HI) \
	 -I$(HO)/llvm/include \
	 -I$(HO)/openssl/include \
	 -I$(HO)/gettext/include \
	 -I$(HO)/tcl-tk/include \
	 -I$(HO)/jpeg/include \
	 -I$(HO)/libpng/include \
	 -I$(HO)/libxml2/include/libxml2

LDFLAGS+=-L$(HO)/llvm/lib -Wl,-rpath,$(HO)/llvm/lib \
	 -L$(HO)/openssl/lib \
	 -L$(HO)/gettext/lib \
	 -L$(HO)/tcl-tk/lib \
	 -L$(HO)/jpeg/lib \
	 -L$(HO)/libpng/lib \
	 -L$(HO)/libxml2/lib


# R-specific flags for OpenMP support
SHLIB_OPENMP_CFLAGS=-fopenmp
SHLIB_OPENMP_CXXFLAGS=-fopenmp
SHLIB_OPENMP_CXX98FLAGS=-fopenmp
SHLIB_OPENMP_CXX11FLAGS=-fopenmp
SHLIB_OPENMP_CXX14FLAGS=-fopenmp
SHLIB_OPENMP_CXX17FLAGS=-fopenmp
SHLIB_OPENMP_FFLAGS=-fopenmp
SHLIB_OPENMP_FCFLAGS=-fopenmp

